# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4

PortSystem              1.0
PortGroup               clang_dependency 1.0

if {${os.platform} eq "darwin" && ${os.major} < 18} {
    # prior to 10.14, universal usually means different library bit depths
    # have to build separately and lipo together
    set using_muniveral_PG true
    PortGroup muniversal 1.0

}

name                    icu
categories              devel textproc
platforms               darwin
maintainers             {kencu @kencu} openmaintainer
license                 Permissive
description             International Components for Unicode
long_description        {*}${description} (ICU) support libraries.

homepage                http://site.icu-project.org/

# Don't forget to increase the revision number of the dependents (e.g. boost)
# whenever the library version number changes. Thanks.
# To find dependencies, use:
# port file all | sort -u | xargs grep -El ':icu( |$)' | rev | cut -d / -f 2 | rev | sort -u

version                 68.2
revision                0
checksums               rmd160  596bd53b17bd85a872f0731679e2f1c664e3bae6 \
                        sha256  c79193dee3907a2199b8296a93b52c5cb74332c26f3d167269487680d479d625 \
                        size    24737478

compiler.cxx_standard   2011

master_sites            https://github.com/unicode-org/icu/releases/download/release-[string map {. -} ${version}]/
distname                icu4c-[string map {. _} ${version}]-src
extract.suffix          .tgz

# use full path to libraries when building tools
patchfiles-append       patch-config-mh-darwin.diff

# clear these, otherwise can collide with installed icu
compiler.cpath
compiler.library_path
configure.cppflags-delete -I${prefix}/include
configure.ldflags-delete  -L${prefix}/lib

worksrcdir              ${name}/source

configure.python        /usr/bin/python

configure.args          --disable-layoutex \
                        --disable-samples  \
                        --disable-tests    \
                        --enable-static

build.args-append       VERBOSE=1

variant tests description "enable tests" {
    test.run                yes
    configure.args-replace --disable-tests --enable-tests
    test.target             check
    test.args-append        VERBOSE=1
}

# handle a multi-bit-depth build of libraries, using muniversal PG
if {![info exists universal_possible]} {
    set universal_possible [expr {${os.universal_supported} && [llength ${configure.universal_archs}] >= 2}]
}

if {${universal_possible} && [variant_isset universal] && ${using_muniveral_PG}} {
    lappend merger_configure_args(i386)   --with-library-bits=32
    lappend merger_configure_args(ppc)    --with-library-bits=32
    lappend merger_configure_args(x86_64) --with-library-bits=64
    lappend merger_configure_args(ppc64)  --with-library-bits=64
    lappend merger_configure_args(arm64)  --with-library-bits=64

    post-build {
        set dirs {}
        foreach arch ${universal_archs_to_use} {
            lappend dirs ${worksrcpath}-${arch}
        }
        foreach dir ${dirs} {
            # Remove architecture-specific flags to facilitate merging.
            reinplace {s| -DSIZEOF_VOID_P=[48]||g}            ${dir}/config/Makefile.inc \
                                                              ${dir}/config/icu-config
            reinplace -E {s| -arch +[^ ]+||g}                 ${dir}/config/pkgdata.inc

            reinplace {s|host=\".*\"|host=\"\"|g}             ${dir}/config/icu-config
            reinplace {s|host_alias=\".*\"|host_alias=\"\"|g} ${dir}/config/icu-config
            reinplace {s|host_cpu=\".*\"|host_cpu=\"\"|g}     ${dir}/config/icu-config
        }
    }

} else {
    # not using muniversal PG, append args in the normal way
    if {${configure.build_arch} in "i386 ppc"} {
        configure.args-append --with-library-bits=32
    } elseif {${configure.build_arch} in "x86_64 ppc64 arm64"} {
        configure.args-append --with-library-bits=64
    }
}

if {${os.major} < 11} {
    depends_build-append    port:python27
    license_noconflict      python27
    configure.python        ${prefix}/bin/python2.7
}

platform darwin 8 {
    patchfiles-append   patch-common-putil.cpp.diff
}

subport ${name}-docs {
    revision                0
    supported_archs         noarch
    description-append      (documentation)
    long_description-append Documentation.
    use_zip                 yes
    patchfiles
    distname                icu4c-[string map {. _} ${version}]-docs
    checksums               rmd160  196fcce48b71638af97eef0554d96d20f6fdbe4c \
                            sha256  703a4204c7683d8dad4320cfbbb6209ae6fc7bd8c4f9b0dc36394711067e89d2 \
                            size    8075068
    extract.dir             ${worksrcpath}/doc/html
    use_configure           no
    build {}
    destroot {
        set docdir      ${prefix}/share/doc/${name}
        xinstall -m 755 -d ${destroot}${docdir}
        copy ${worksrcpath}/doc/html ${destroot}${docdir}
    }
}

subport icu-lx {
    # delete after 20220403
    PortGroup obsolete 1.0

    replaced_by harfbuzz
}

subport icu-doxygen-docs {
    # delete after 20220403
    PortGroup obsolete 1.0

    replaced_by icu-docs
}

livecheck.url       http://site.icu-project.org/download
livecheck.regex     "ICU4C-Download\">(\[0-9.\]+)"
